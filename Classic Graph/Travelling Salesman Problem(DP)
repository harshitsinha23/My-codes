#include<bits/stdc++.h>
#define int long long int
#define inf 100000000000000
#define IOS ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
using namespace std;
int mod=1000000007;
const int n = 4;
int DP[4][1<<5];
int TSPDP(int graph[][n],int mask,int cur)
{
    if(mask==(1<<n)-1)
    {
        return graph[cur][0];
    }

    if(DP[cur][mask]!=-1)
    {
        return DP[cur][mask];
    }
    int mn=inf;
    for(int i=0;i<4;i++)
    {
        if((mask&(1<<i))==0)
        {

            mn=min(mn,graph[cur][i]+TSPDP(graph,mask|(1<<i),i));

        }
    }
    return DP[cur][mask]=mn;
}

int32_t main()
{
    int graph[][n] = {
        { 0, 10, 15, 20 },
        { 10, 0, 35, 25 },
        { 15, 35, 0, 30 },
        { 20, 25, 30, 0 }
    };

    int mask=0;
    mask=mask&1;
    memset(DP,-1,sizeof(DP));
    cout<<TSPDP(graph,mask,0);

}
