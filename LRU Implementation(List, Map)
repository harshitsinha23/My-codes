#include<bits/stdc++.h>
using namespace std;


void PrintFinalLRU(int pages[],int capacity,int n)
{
	list<int> frames;
	unordered_map<int,list<int>::iterator> mp;

	for(int i=0;i<n;i++)
	{
		if(mp.find(pages[i])==mp.end())
		{
			if(frames.size() == capacity)
			{
				int replace = frames.back();
				frames.pop_back();
				mp.erase(replace); 
			}
		}
		else
		{
			frames.erase(mp[pages[i]]);
		}
		frames.push_front(pages[i]);
		mp[pages[i]] = frames.begin();
	}

	for(auto x:frames)
	{
		cout<<x<<" ";
	}
}

int main()
{
	int capacity = 4;
	int pages[]={1,2,3,1,4,5,3};
	int n = sizeof(pages)/sizeof(pages[0]);

	PrintFinalLRU(pages,capacity,n);
}
